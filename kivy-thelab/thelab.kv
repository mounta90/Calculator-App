CalculatorWidget: 

<CalculatorWidget>:
    orientation:"vertical"
    
    Label:
        size_hint: 1, 1/3
        font_name: "fonts/Lcd.ttf"
        font_size: "100dp"
        color: 0,0,1,1
        text: root.MathExpression
        
        

    GridLayout:
        cols: 4
        rows: 4
        size_hint: 1, 2/3
        
        Button:
            text: "7"
            on_press: root.ButtonIsClicked(self.text)
        Button:
            text: "8"
            on_press: root.ButtonIsClicked(self.text)
        Button:
            text: "9"
            on_press: root.ButtonIsClicked(self.text)
        Button:
            text: "*"
            on_press: root.ButtonIsClicked(self.text)
        Button:
            text: "4"
            on_press: root.ButtonIsClicked(self.text)
        Button:
            text: "5"
            on_press: root.ButtonIsClicked(self.text)
        Button:
            text: "6"
            on_press: root.ButtonIsClicked(self.text)
        Button:
            text: "/"
            on_press: root.ButtonIsClicked(self.text)
        Button:
            text: "1"
            on_press: root.ButtonIsClicked(self.text)
        Button:
            text: "2"  
            on_press: root.ButtonIsClicked(self.text)      
        Button:
            text: "3"
            on_press: root.ButtonIsClicked(self.text)
        Button:
            text: "+"
            on_press: root.ButtonIsClicked(self.text)
        Button:
            text: "Ans"
            on_press: root.EvaluateMathExpression()
        Button:
            text: "0"
            on_press: root.ButtonIsClicked(self.text)
        Button:
            text: "^"
            on_press: root.ButtonIsClicked(self.text)
        Button:
            text: "-"
            on_press: root.ButtonIsClicked(self.text)

<CanvasExample1>:
    canvas:
        Rectangle:
            pos: self.center_x - dp(100)/2, self.center_y - dp(100)/2
            size: dp(100), dp(100) 
        Ellipse:
            pos: 300, 400
            size: dp(100), dp(100)/2
        Line: 
            points: (0,0, self.width/4,200, self.width/2,0, self.width*3/4,200, self.width,0)
            width: 3

<CanvasExample2>:
    canvas:
        Color:
            rgba: 0,1,0,1
        Line:
            points: (0,self.height/2, self.width,self.height/2)
            width: 2
        Color:
            rgba: 0,0,1,1
        Line:
            points: (self.width/2,0, self.width/2, self.height)
            width: 2

<CanvasExample3>:
    canvas:
        Color:
            rgba: .5, .5, .5, 1
        Line:
            circle: (100, 100, 50)
            width: 2
        Color:
            rgba: .25, .5, .75, 1
        Line:
            ellipse: (400, 400, 300, 100)
            width: 2

<CanvasExample4>:
    Button:
        text: "->"
        pos: 100, 100
        size: 50,50
        on_press: root.OnButtonPress_MoveUntilBorder()
             
<CanvasExample7>
    RelativeLayout:
        canvas:
            Color:
                rgb: 1, 0, 0
            Rectangle:
                size: self.size
    RelativeLayout:
        canvas:
            Color:
                rgb: 0, 1, 0
            Rectangle:
                size: self.size
    RelativeLayout:
        canvas:
            Color:
                rgb: 0, 0, 1
            Rectangle:
                size: self.size
    

<WidgetsExample>:
    cols: 3

    ToggleButton:
        text: root.tb_my_text
        on_state: root.ToggleButtonState(self)
        size_hint: .5, .5

    Button:
        text: "Count"
        on_press: root.ButtonIsClicked()
        disabled: not root.counter_bool
    
    Label:
        text: root.my_text
        font_name: "fonts/Lcd.ttf"
        font_size: "100dp"
        color: 0,0,1,1

    Switch:
        id: my_switch
        active: True
        on_active: root.SwitchActivated(self)

    Slider:
        id: my_slider
        min: 0
        max: 100
        # on_value: root.OnSliderValue(self)
        disabled: not my_switch.active

    BoxLayout:
        orientation: "vertical"
        padding: "10dp"
        Label:
            text: str(int(my_slider.value))
        ProgressBar:
            value: my_slider.value
    
    TextInput:
        id: my_text_input
        text: root.input_text
        multiline: False
        on_text_validate: root.OnTextValidate(self) 

    Label:
        text: "You typed: " + root.input_text




<GridLayoutExample>:
    
    rows: 3

    Button:
        text: "1"
    Button:
        text: "2"
    Button:
        text: "3"

<BoxLayoutExample>:
    orientation: "vertical"
    Button:
        text: "A"
        size_hint: .5, .5        # For size_hint(width, height)
        pos_hint: {"center_x" : .5}      # For pos_hint, if orientation = vertical use [x, center_x, right] / orientation = horizontal use [y, center_y, top]
    BoxLayout:
        Button:
            text: "1"
        Button:
            text: "2"
        Button:
            text: "3"
    Button:
        text: "C"

<MainWidget>:
    Button:
        text: "Press Me"
        size: "100dp","100dp"
        pos: "350dp","300dp"
        color: .5, 0, .3, 1
    Label:
        text: "Label"
        size: "100dp","100dp"
        pos: "250dp","200dp"
        color: 0, 0, .3, 1
        
         